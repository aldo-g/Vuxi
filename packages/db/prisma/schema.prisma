generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int      @id @default(autoincrement())
  Name           String?
  email              String   @unique // This is the login email
  passwordHash       String
  createdAt          DateTime @default(now())
  projects           Project[]
}

model Project {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String
  baseUrl      String
  orgName      String?
  orgPurpose   String?
  createdAt    DateTime      @default(now())
  user         User          @relation(fields: [userId], references: [id])
  analysisRuns AnalysisRun[]

  @@unique([userId, baseUrl])
}

model AnalysisRun {
  id            Int      @id @default(autoincrement())
  projectId     Int
  status        String
  progress      Json?
  finalReport   Json?
  overallScore  Int?
  createdAt     DateTime @default(now())
  project       Project  @relation(fields: [projectId], references: [id])
  analyzedPages AnalyzedPage[]
}

// UPDATED: This model no longer has a screenshotUrl
model AnalyzedPage {
  id          Int      @id @default(autoincrement())
  runId       Int
  url         String
  pageAim     String?
  analysisRun AnalysisRun @relation(fields: [runId], references: [id])
  screenshots Screenshot[] // This now links to the new Screenshot table
}

// NEW: This table stores all screenshots for analyzed pages
model Screenshot {
  id             Int      @id @default(autoincrement())
  analyzedPageId Int
  storageUrl     String   // The URL to the screenshot file in cloud storage
  viewport       String?  // e.g., "desktop", "mobile", or "1920x1080"
  label          String?  // e.g., "Initial Load", "After Cookie Banner"
  createdAt      DateTime @default(now())
  analyzedPage   AnalyzedPage @relation(fields: [analyzedPageId], references: [id])
}